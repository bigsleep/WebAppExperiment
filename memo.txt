-----------------------------------------------------
20140303 api

Warpとかをバックエンドにするには?

run :: Port -> Application -> IO ()
type Application = Request -> IO Response

GetRequest (i -> m a) -> m a

m a -> IO a
が必要?

レスポンスはstateとかにいれておけばいいか
他にも状態持ちたいかもしれないのでlens使うとか

liftIO?
最後に使う?

--------------------------------------------------
20140213 評価

data type a la carte のevalAlgebraとかと一緒

I aとそれぞれのInterfaceを評価用型クラスのインスタンスにして
評価用関数を適用して値を求める。
これはユーザーコードに書くか別モジュールに書くもの。
サンプル用やデバッグ用に用意するかも

data type a la carte の例をExistential Qualified Data Type で置き換えた例を書いてみる

なんか問題あるかも

Existentialにすると先に中身の性質を決めておかないといけないので
構造だけ保持して後で評価するというのには使いづらいかも

------------------------------------------------
20140212 メモ

webアプリのDSLのような感じ。
インターフェース定義とか

まずは最低限のところだけでいい

サーバーのセッティングとかは?
loadSettingを用意すればいいか
サーバーだとルーティングとかもいるのか?
ルーティングはなんか別にしたほうがいいか
Map String App とかを用意しておいてパスに応じてAPI呼ぶ感じとか
ルーティングの部分もDSLでできるか

DSLを一部使わない場合処理をスキップするような関数を用意しとくとか

実際のIOに接地させる実装は別にする
